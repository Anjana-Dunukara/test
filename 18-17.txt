*************2017 2018 Paper*************


Q1) 
		pasengers(PID, PName, Gender, City,PhoneNo,PassportNo)
		Flights(FID, No_Of_Seats,PilotName)
		Routes(RID,Departure, Arrival, Date, Time, No_of_Passangers,FID)
		Booking(PID,RID, Class)
	
		(i) Create a database in the name "Travels".
		
		(ii) Create the tables for the above mentioned logical schema
			 under the "Travels" database and set the PRIMARY Key and the 
			 foreign key together with CASCADE DELETE and UPDATE settings. 
			 Following constraints on the relevant tables,
			 
			 a. In the table "Passengers", insert the  passenger name with the title.
				(eg. If "Gender is male then Mr. <name> otherwise Ms <name>")
				
			 b. In the table "Routes", the data should be generated than current date.
				if not, the status of the route is invalid.
				
			 c. If a new route is assigned to the passangers in the table "Booking"
				then the number of passengers in the table "Routes" has to updated.
				
			 d. If the details of a reservation is deleted then store all the deleted values and the
				user who deltes it in a new table "DELETE_data"
		
		(iii) Test data are given in the text format for each table, in the desktop file
			  "TestData.txt" insert appropriae data into the tables created under "Travels" database
	
	
		(iv) Creat a user ID "staff" and the password "stf@123" whith the privileges to insert, select
			 and delete on the tables "Passengers" and "Booking" and only view other tow tables

	
	
Q2)  	Write a SQL statement to create a proceeduree based on following,
	i. to find a route and insert the booking details in the table "Booking" if the following
		details are available? Passenger name, Travelling date, departure, arrival and perferable class to travel.
		
	ii. to get the named and contact details of the passengers if the status of the route(or flight) is canceled for a given "RID". if not, get the 
		the route status.
		
	iii. Change the status of the route "R103" as Cancelled and get the passenger names and contact details
	
	iv. do a reservationfor "Ms. Shanthi Weerasinghe" who wishes to travel from "Anuradhapura" to "Gampaha" on "2023-08-09" in business class
	

Q3)Write a SQL statement to create a view by the user ID "staff" based on following

	i.  to see the details of the route with minimum number of pasenger
	
	ii. to see details of the passengers reserved in business class
	
	iii. to count the umber of males and femaes reserved in economy class
	
	iv. to count the number of passengers reserved in each of the routes.
	
	v. to List the details of the passengers who treavled more than once.
	
	vi. to List the details of the passengers who reserved flight more than once
	
	vii. to List the details of the passengers who reserved or travelled more than three times
	
	
Q4) Write SQL expressions for each of the following task:

	i. Backup the details of the tables "Passengers" and "booking"
	
	ii. Take a copy of the database without tuples and create a new database "TravelsNew"
		then recover the definition of al tables from the database "Travels " to the database
		"TravelNew"
		
	iii. Login as staff and delete " Mr. Saman Ratnayake" reservation on route "R10"
	
	iv. Revoke deleting privileges from staff on all tables 
	
	
	
	
	
	
	
	
	

	tee C:\backup.txt
i. 
	CREATE DATABASE Travels;

ii. 
	USE Travels;
	
	CREATE TABLE Passengers (
		PID VARCHAR(20) PRIMARY KEY,
		PName VARCHAR(255) NOT NULL,
		Gender ENUM('M', 'F') NOT NULL,
		City VARCHAR(255),
		PhoneNo VARCHAR(20),
		PassportNo VARCHAR(100) UNIQUE
	);
	
	CREATE TABLE Flights (
		FID VARCHAR(20) PRIMARY KEY,
		No_Of_Seats INT,
		PilotName VARCHAR(255)
	);
	
	
	CREATE TABLE Routes (
		RID VARCHAR(20) PRIMARY KEY,
		Departure VARCHAR(255),
		Arrival VARCHAR(255),
		Date DATE,
		Time TIME,
		No_of_Passengers INT,
		FID VARCHAR(20),
		FOREIGN KEY (FID) REFERENCES Flights(FID) ON DELETE CASCADE ON UPDATE CASCADE
	);

	
	CREATE TABLE Booking (
		PID VARCHAR(20),
		RID VARCHAR(20),
		PRIMARY KEY (PID,RID),
		Class VARCHAR(20) NOT NULL,
		FOREIGN KEY (PID) REFERENCES Passengers(PID) ON DELETE CASCADE ON UPDATE CASCADE,
		FOREIGN KEY (RID) REFERENCES Routes(RID) ON DELETE CASCADE ON UPDATE CASCADE
	);
	

iii. 
	SHOW VARIABLES LIKE 'secure_file_priv';
	
	PID,PName,Gender,City,PhoneNo,PassportNo
	P1,"Mr. Nimal Perera",M,Colombo,0710000001,N12345678
	P2,"Ms. Kamala Silva",F,Kandy,0710000002,K23456789
	P3,"Mr. Anura Fernando",M,Galle,0710000003,A34567890
	P4,"Ms. Sunita Kumari",F,Matara,0710000004,S45678901
	P5,"Mr. Sunil Jayawardena",M,Jaffna,0710000005,J56789012
	P6,"Ms. Shanthi Weerasinghe",F,Colombo,0710000006,W67890123
	P7,"Mr. Mahinda Alwis",M,Gampaha,0710000007,M78901234
	P8,"Ms. Priyanka Bandara",F,Kurunegala,0710000008,P89012345
	P9,"Mr. Saman Ratnayake",M,Anuradhapura,0710000009,R90123456
	P10,"Ms. Lakshmi Peiris",F,Ratnapura,0710000010,L01234567
	
	
	INSERT INTO Passengers (PID, PName, Gender, City, PhoneNo, PassportNo)
	VALUES
		('P1', 'Nimal Perera', 'M', 'Colombo', '0710000001', 'N12345678'),
		('P2', 'Kamala Silva', 'F', 'Kandy', '0710000002', 'K23456789'),
		('P3', 'Anura Fernando', 'M', 'Galle', '0710000003', 'A34567890'),
		('P4', 'Sunita Kumari', 'F', 'Matara', '0710000004', 'S45678901'),
		('P5', 'Sunil Jayawardena', 'M', 'Jaffna', '0710000005', 'J56789012'),
		('P6', 'Shanthi Weerasinghe', 'F', 'Colombo', '0710000006', 'W67890123'),
		('P7', 'Mahinda Alwis', 'M', 'Gampaha', '0710000007', 'M78901234'),
		('P8', 'Priyanka Bandara', 'F', 'Kurunegala', '0710000008', 'P89012345'),
		('P9', 'Saman Ratnayake', 'M', 'Anuradhapura', '0710000009', 'R90123456'),
		('P10', 'Lakshmi Peiris', 'F', 'Ratnapura', '0710000010', 'L01234567');
		
		


	 /*LOAD DATA INFILE 'C:/wamp64/tmp/passengers.csv'
		INTO TABLE Passengers
		FIELDS TERMINATED BY ','
		ENCLOSED BY '"'
		LINES TERMINATED BY '\n'
		IGNORE 1 ROWS; */
		
	INSERT INTO flights (FID, No_Of_Seats, PilotName)
	VALUES
		('F1', 100, 'Captain Arjuna'),
		('F2', 200, 'Captain Lakshman'),
		('F3', 150, 'Captain Mohan'),
		('F4', 175, 'Captain Priyankara'),
		('F5', 200, 'Captain Suranga'),
		('F6', 180, 'Captain Tharanga'),
		('F7', 190, 'Captain Nihal'),
		('F8', 170, 'Captain Isurue'),
		('F9', 160, 'Captain Harsha Mendis'),
		('F10', 180, 'Captain Mahesh Kumara');

	LOAD DATA INFILE 'C:/wamp64/tmp/routes.txt'
		INTO TABLE Routes
		FIELDS TERMINATED BY ','
		LINES TERMINATED BY '\n';
	
	INSERT INTO Booking (PID, RID, Class) VALUES
		('P1', 'R1', 'Economy'),
		('P2', 'R2', 'Business'),
		('P3', 'R3', 'First_Class'),
		('P4', 'R4', 'Economy'),
		('P5', 'R5', 'Business'),
		('P6', 'R6', 'First_Class'),
		('P7', 'R7', 'Economy'),
		('P8', 'R8', 'Business'),
		('P9', 'R9', 'First_Class'),
		('P10', 'R10', 'Economy');
		
		
  (a) UPDATE Passengers
			SET PName = CONCAT(IF(Gender = 'M', 'Mr. ', 'Ms. '), PName);

	
  (b)ALTER TABLE Routes
	ADD Status VARCHAR(20) DEFAULT 'Valid' AFTER No_of_Passengers;
	
	DELIMITER //
		CREATE TRIGGER check_route_date
		BEFORE INSERT ON Routes
		FOR EACH ROW
		BEGIN
			IF NEW.Date < CURDATE() THEN
				SET NEW.Status = 'Invalid';
			END IF;
		END//
		DELIMITER ;
		
	INSERT INTO Routes (RID, Departure, Arrival, Date, Time, No_of_Passengers, FID)
	VALUES
		('R11', 'Colombo', 'Jaffna', '2022-07-01', '09:00:00', 100, 'F1'),
		('R12', 'Kandy', 'Galle', '2022-06-30', '10:00:00', 150, 'F2');
		
	(c) 
	
	DELIMITER //
		CREATE TRIGGER update_passenger_count
		AFTER INSERT ON Booking
		FOR EACH ROW
		BEGIN
			UPDATE Routes
			SET No_of_Passengers = No_of_Passengers + 1
			WHERE RID = NEW.RID;
		END//
		DELIMITER ;
		
	(d)
		CREATE TABLE DELETE_data (
		  DeleteID INT AUTO_INCREMENT PRIMARY KEY,
		  TableName VARCHAR(255) NOT NULL,
		  DeletedValues JSON NOT NULL,
		  DeletedBy VARCHAR(255) NOT NULL,
		  DeletedDate DATETIME DEFAULT CURRENT_TIMESTAMP
		);
		
		DELIMITER //
		CREATE TRIGGER capture_deleted_booking
		AFTER DELETE ON Booking
		FOR EACH ROW
		BEGIN
		  INSERT INTO DELETE_data (TableName, DeletedValues, DeletedBy)
		  VALUES ('Booking', JSON_OBJECT('PID', OLD.PID, 'RID', OLD.RID, 'Class', OLD.Class), USER());
		END//
		DELIMITER ;
		
		DELETE FROM Booking
			WHERE PID = 'P1' AND RID = 'R1';

iv. 
	//Create a new user and set the password
	CREATE USER 'staff'@'localhost' IDENTIFIED BY 'stf@123';
	
	//Grant privileges to the user for the desired tables
	GRANT INSERT, SELECT, DELETE ON Travels.Passengers TO 'staff'@'localhost';
	GRANT INSERT, SELECT, DELETE ON Travels.Booking TO 'staff'@'localhost';

	//Grant read-only privileges to view the other tables
	GRANT SELECT ON Travels.Flights TO 'staff'@'localhost';
	GRANT SELECT ON Travels.Routes TO 'staff'@'localhost';
	
	//Flush the privileges for the changes to take effect immediately
	FLUSH PRIVILEGES;


	mysql -u staff -p

	//DROP USER 'username'@'localhost'
	


Q2) 
	i. 

		DELIMITER //

		CREATE PROCEDURE InsertBooking(
			IN passengerName VARCHAR(255),
			IN travelDate DATE,
			IN departure VARCHAR(255),
			IN arrival VARCHAR(255),
			IN travelClass VARCHAR(20)
		)
		BEGIN
			DECLARE routeId VARCHAR(20);
			
			-- Find the route based on the provided departure and arrival
			SELECT RID INTO routeId
			FROM Routes
			WHERE Departure = departure AND Arrival = arrival AND Date = travelDate;
			
			-- Insert the booking details if the route is found
			IF routeId IS NOT NULL THEN
				INSERT INTO Booking (PID, RID, Class)
				SELECT PID, routeId, travelClass
				FROM Passengers
				WHERE PName = passengerName;
				
				SELECT 'Booking successful' AS Message;
			ELSE
				SELECT 'No route available' AS Message;
			END IF;
		END //

		DELIMITER ;
		
		
		CALL InsertBooking('Nimal Perera', '2023-08-01', 'Colombo', 'Jaffna', 'Economy');

	ii. 
		DELIMITER //

		CREATE PROCEDURE GetPassengerDetails(
			IN routeId VARCHAR(20)
		)
		BEGIN
			DECLARE routeStatus VARCHAR(20);
			
			-- Check the status of the route
			SELECT Status INTO routeStatus
			FROM Routes
			WHERE RID = routeId;
			
			-- If route status is canceled, get passenger details
			IF routeStatus = 'Canceled' THEN
				SELECT PName AS PassengerName, PhoneNo AS ContactNumber
				FROM Passengers
				WHERE PID IN (
					SELECT PID
					FROM Booking
					WHERE RID = routeId
				);
			ELSE
				SELECT routeStatus AS RouteStatus;
			END IF;
		END //

		DELIMITER ;
		
		CALL GetPassengerDetails('R12');
		
	
	iii. 
		DELIMITER //

		CREATE PROCEDURE ChangeRouteStatusAndGetPassengerDetails()
		BEGIN
			-- Change the status of route "R103" to "Cancelled"
			UPDATE Routes
			SET Status = 'Cancelled'
			WHERE RID = 'R10';

			-- Get passenger names and contact details for the cancelled route
			SELECT PName AS PassengerName, PhoneNo AS ContactNumber
			FROM Passengers
			WHERE PID IN (
				SELECT PID
				FROM Booking
				WHERE RID = 'R10'
			);
		END //

		DELIMITER ;
		
		
	iv. 
	DELIMITER //

		CREATE PROCEDURE DoReservation(
			IN passengerName VARCHAR(255),
			IN departure VARCHAR(255),
			IN arrival VARCHAR(255),
			IN travelDate DATE,
			IN travelClass VARCHAR(20)
		)
		BEGIN
			-- Find the passenger ID based on the provided passenger name
			SET @passengerId := (SELECT PID FROM Passengers WHERE PName = passengerName);

			-- If passenger ID is found, find the route ID based on the provided departure and arrival
			IF @passengerId IS NOT NULL THEN
				-- Find the route ID
				SET @routeId := (SELECT RID FROM Routes WHERE Departure = departure AND Arrival = arrival AND Date = travelDate);

				-- If route ID is found, insert the booking details
				IF @routeId IS NOT NULL THEN
					-- Check if there are available seats on the route
					SET @availableSeats := (SELECT No_of_Passengers FROM Routes WHERE RID = @routeId);
					SET @flightId := (SELECT FID FROM Routes WHERE RID = @routeId);
					SET @maxSeats := (SELECT No_Of_Seats FROM Flights WHERE FID = @flightId);

					-- Check if there are enough seats available
					IF @availableSeats < @maxSeats THEN
						INSERT INTO Booking (PID, RID, Class) VALUES (@passengerId, @routeId, travelClass);
						UPDATE Routes SET No_of_Passengers = No_of_Passengers + 1 WHERE RID = @routeId;
						SELECT 'Reservation successful.' AS Message;
					ELSE
						SELECT 'No available seats on the route.' AS Message;
					END IF;
				ELSE
					SELECT 'Route not found.' AS Message;
				END IF;
			ELSE
				SELECT 'Passenger not found.' AS Message;
			END IF;
		END //

		DELIMITER ;
		
	CALL DoReservation('Ms. Shanthi Weerasinghe', 'Anuradhapura', 'Gampaha', '2023-08-09', 'Business');


Q3) 
	i. 
	
	CREATE VIEW MinPassengerRoute AS
		SELECT R.RID, R.Departure, R.Arrival, R.Date, R.Time, R.No_of_Passengers
		FROM Routes R
		WHERE R.No_of_Passengers = (SELECT MIN(No_of_Passengers) FROM Routes);
		
	SELECT * FROM MinPassengerRoute;
	
	
	ii. 
	CREATE VIEW PassengersBusinessClass AS
		SELECT P.PID, P.PName, P.Gender, P.City, P.PhoneNo, P.PassportNo, B.RID, B.Class
		FROM Passengers P
		JOIN Booking B ON P.PID = B.PID
		WHERE B.Class = 'Business';
		
	SELECT * FROM PassengersBusinessClass;
	
	
	
	iii. 
	
	CREATE VIEW EconomyClassPassengerCount AS
		SELECT Class, Gender, COUNT(*) AS Count
		FROM Passengers
		JOIN Booking ON Passengers.PID = Booking.PID
		WHERE Class = 'Economy'
		GROUP BY Class, Gender;
		
	SELECT * FROM EconomyClassPassengerCount;
	
	iv. 
	
	CREATE VIEW RoutePassengerCount AS
		SELECT RID, COUNT(*) AS PassengerCount
		FROM Booking
		GROUP BY RID;
		
	SELECT * FROM RoutePassengerCount;

	v.
	
	CREATE VIEW PassengersMoreThanOnce AS
		SELECT P.PID, P.PName, P.Gender, P.City, P.PhoneNo, P.PassportNo
		FROM Passengers P
		JOIN Booking B ON P.PID = B.PID
		GROUP BY P.PID, P.PName, P.Gender, P.City, P.PhoneNo, P.PassportNo
		HAVING COUNT(B.PID) > 1;
		
	SELECT * FROM PassengersMoreThanOnce;


	vi.
	CREATE VIEW PassengersReservedMoreThanOnce AS
		SELECT P.PID, P.PName, P.Gender, P.City, P.PhoneNo, P.PassportNo
		FROM Passengers P
		JOIN Booking B ON P.PID = B.PID
		GROUP BY P.PID, P.PName, P.Gender, P.City, P.PhoneNo, P.PassportNo
		HAVING COUNT(B.RID) > 1;
		
	SELECT * FROM PassengersReservedMoreThanOnce;


	
	
	
	vii. 

	CREATE VIEW PassengersReservedOrTraveledMoreThanThreeTimes AS
		SELECT P.PID, P.PName, P.Gender, P.City, P.PhoneNo, P.PassportNo
		FROM Passengers P
		JOIN Booking B ON P.PID = B.PID
		GROUP BY P.PID, P.PName, P.Gender, P.City, P.PhoneNo, P.PassportNo
		HAVING COUNT(B.RID) + COUNT(B.PID) > 3;
		
	SELECT * FROM PassengersReservedOrTraveledMoreThanZeroTimes;
	


Q4) 
	i.
	SELECT *
		INTO OUTFILE 'C:/wamp64/tmp/passengers_backup.csv'
		FIELDS TERMINATED BY ','
		ENCLOSED BY '"'
		LINES TERMINATED BY '\n'
		FROM Passengers;
		
		
	SELECT *
		INTO OUTFILE 'C:/wamp64/tmp//booking_backup.csv'
		FIELDS TERMINATED BY ','
		ENCLOSED BY '"'
		LINES TERMINATED BY '\n'
		FROM Booking;

		
	ii.
	
	
	iii. 
	DELETE FROM Booking
		WHERE PID = 'P9' AND RID = 'R10';
	
	iv. REVOKE DELETE ON Travels.* FROM 'staff'@'localhost';
